<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">


    <!--Spring Security-->

    <sec:http security="none" pattern="/mp/addPerson" />
    <sec:http security="none" pattern="/person/"/>
    <sec:http security="none" pattern="/person"/>

    <sec:http auto-config="true">
        <sec:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <sec:csrf disabled="true"/>
        <sec:form-login login-page="http://localhost/login.html" default-target-url="http://localhost:8080/ManagePeople-1.0/mp/"
                        login-processing-url="/mp/loginCheck"
                        username-parameter="username"
                        password-parameter="password"
                        always-use-default-target="false"
                        authentication-failure-url="http://lcoalhost/login_failure.html"></sec:form-login>
    </sec:http>

    <bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:password-encoder ref="bcryptEncoder"/>
            <sec:jdbc-user-service data-source-ref="dataSource"
                                   users-by-username-query="select aname,password,enabled from Admin where aname= ?"
                                   authorities-by-username-query="select aname,role from Admin_Role where aname =?"/>
        </sec:authentication-provider>
    </sec:authentication-manager>


    <context:component-scan base-package="entity,controller,service,utils">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--datasource-->
    <context:property-placeholder location="classpath:jdbc-config.properties"/>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>

    <!--sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="dao,entity"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>